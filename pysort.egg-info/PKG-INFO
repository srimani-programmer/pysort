Metadata-Version: 2.1
Name: pysort
Version: 1.0.0
Summary: A Powerful package to perform different types of stable and unstable Sorting techniques on the list Data Structure.
Home-page: https://github.com/srimani-programmer/pysort
Author: Sri Manikanta Palakollu
Author-email: srimani.crypter@gmail.com
License: MIT
Description: ### PySort
        A Powerful Python package that performs 15 different types of stable and unstable Sorting algorithms on List Data Structure. This package will be more beneficial for competitive programmers and developers. Based on your requirement choose your sort algorithm.
        
        ### USAGE
        
        ```python
        # importing Library
        
        from sorting_techniques import pysort
        
        # Creating the Sort Object
        sortObj = pysort.Sorting()
        ```
        
        #### BUBBLE SORT
        
        ```python
        myList = [1,3,2,7,4,89,56,99,111,23,6445,566]
        
        # Genearting the Sort Result 
        sortResult = sortObj.bubbleSort(myList)
        
        # The SortResult contains the Sorted List
        
        print(sortResult)
        ```
        
        #### Insertion Sort
        ```python
        # Performing Insertion Sort
        sortResult = sortObj.insertionSort(myList)
        
        # The SortResult contains the Sorted List
        
        print(sortResult)
        ```
        
        #### Selection Sort
        ```python
        # Performing Insertion Sort
        sortResult = sortObj.selectionSort(myList)
        
        # The SortResult contains the Sorted List
        
        print(sortResult)
        ```
        
        #### Shell Sort
        ```python
        # Performing Insertion Sort
        sortResult = sortObj.shellSort(myList)
        
        # The SortResult contains the Sorted List
        
        print(sortResult)
        ```
        
        #### Pigeon Hole Sort
        ```python
        # Performing Insertion Sort
        sortResult = sortObj.pigeonHoleSort(myList)
        
        # The SortResult contains the Sorted List
        
        print(sortResult)
        ```
        
        #### Heap Sort
        ```python
        # Performing Insertion Sort
        sortResult = sortObj.heapSort(myList)
        
        # The SortResult contains the Sorted List
        
        print(sortResult)
        ```
        
        #### Gnome Sort
        ```python
        # Performing Insertion Sort
        sortResult = sortObj.heapSort(myList)
        
        # The SortResult contains the Sorted List
        
        print(sortResult)
        ```
        
        #### Heap Sort
        ```python
        # Performing Insertion Sort
        sortResult = sortObj.heapSort(myList)
        
        # The SortResult contains the Sorted List
        
        print(sortResult)
        ```
        
        #### Pancake Sort
        ```python
        # Performing Insertion Sort
        sortResult = sortObj.pancakeSort(myList)
        
        # The SortResult contains the Sorted List
        
        print(sortResult)
        ```
        
        #### Bogo Sort
        ```python
        # Performing Insertion Sort
        sortResult = sortObj.bogoSort(myList)
        
        # The SortResult contains the Sorted List
        
        print(sortResult)
        ```
        
        #### Merge Sort
        ```python
        # Performing Insertion Sort
        sortResult = sortObj.mergeSort(myList)
        
        # The SortResult contains the Sorted List
        
        print(sortResult)
        ```
        
        #### Quick Sort
        ```python
        # Performing Insertion Sort
        sortResult = sortObj.heapSort(myList)
        
        # The SortResult contains the Sorted List
        
        print(sortResult)
        ```
        
        #### Brick Sort
        ```python
        # Performing Insertion Sort
        sortResult = sortObj.brickSort(myList)
        
        # The SortResult contains the Sorted List
        
        print(sortResult)
        ```
        
        #### Radix Sort
        ```python
        # Performing Insertion Sort
        sortResult = sortObj.radixSort(myList)
        
        # The SortResult contains the Sorted List
        
        print(sortResult)
        ```
        
        #### Stooage Sort
        ```python
        # Performing Insertion Sort
        sortResult = sortObj.heapSort(myList,initialIndexValue, lengthOfList-1)
        
        # The SortResult contains the Sorted List
        
        print(sortResult)
        ```
        
        ### Dependencies
        
        1. Python v3.x is Required.
        
        
        
        
        
        
        
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.5
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Description-Content-Type: text/markdown
